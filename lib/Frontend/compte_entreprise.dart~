import 'package:flutter/material.dart';

class CompteEntreprisePage extends StatefulWidget {
  final String nomEntreprise;
  const CompteEntreprisePage({super.key, required this.nomEntreprise});

  @override
  State<CompteEntreprisePage> createState() => _CompteEntreprisePageState();
}

class _CompteEntreprisePageState extends State<CompteEntreprisePage> {
  final Color rose = const Color(0xFFE61580);
  final TextEditingController nomController = TextEditingController();
  final TextEditingController adresseController = TextEditingController();
  final TextEditingController telephoneController = TextEditingController();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController contactMessageController = TextEditingController();

  bool showContactBox = false;
  bool modeEdition = false;

  @override
  void initState() {
    super.initState();
    nomController.text = widget.nomEntreprise;
    adresseController.text = "123 Rue Exemple";
    telephoneController.text = "+212 6 12 34 56 78";
    emailController.text = "contact@entreprise.com";
  }

  @override
  void dispose() {
    nomController.dispose();
    adresseController.dispose();
    telephoneController.dispose();
    emailController.dispose();
    contactMessageController.dispose();
    super.dispose();
  }

  Widget buildTextLine(String label, TextEditingController controller) {
    return Row(
      children: [
        Expanded(
          child: TextField(
            controller: controller,
            readOnly: !modeEdition,
            cursorColor: rose,
            decoration: InputDecoration(
              hintText: label,
              border: InputBorder.none,
              suffixIcon: modeEdition
                  ? Icon(Icons.edit, size: 18, color: rose)
                  : null,
            ),
          ),
        ),
      ],
    );
  }

  @override
  Widget build(BuildContext context) {
    final isDark = Theme.of(context).brightness == Brightness.dark;

    return Scaffold(
      backgroundColor: Theme.of(context).scaffoldBackgroundColor,
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Align(
              alignment: Alignment.topLeft,
              child: IconButton(
                icon: const Icon(Icons.arrow_back_ios),
                color: rose,
                onPressed: () {
                  Navigator.pop(context);
                },
              ),
            ),

            const SizedBox(height: 17),
            Stack(
              children: [
                Container(
                  height: 160,
                  width: double.infinity,
                  decoration: BoxDecoration(
                    color: Colors.grey.shade400,
                    borderRadius: BorderRadius.circular(12),
                  ),
                  child: Center(
                    child: Icon(Icons.image_outlined, color: Colors.white70, size: 40),
                  ),
                ),
                Positioned(
                  top: 10,
                  right: 10,
                  child: Container(
                    decoration: BoxDecoration(
                      color: Colors.white,
                      shape: BoxShape.circle,
                      boxShadow: [
                        BoxShadow(
                          color: Colors.black.withOpacity(0.2),
                          blurRadius: 4,
                          offset: const Offset(0, 2),
                        )
                      ],
                    ),
                    child: IconButton(
                      icon: Icon(Icons.edit, color: rose, size: 20),
                      onPressed: () {
                        // Action pour modifier ou ajouter l'image
                      },
                    ),
                  ),
                ),
              ],
            ),


            const SizedBox(height: 12),

            Row(
              children: [
                CircleAvatar(
                  backgroundColor: Colors.grey.shade400,
                  radius: 28,
                  child: const Icon(Icons.business, color: Colors.white),
                ),
                const SizedBox(width: 12),
                Expanded(
                  child: Text(
                    widget.nomEntreprise,
                    style: const TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                  ),
                ),
                IconButton(
                  icon: Icon(Icons.edit, color: rose),
                  onPressed: () {},
                )
              ],
            ),

            const SizedBox(height: 30),

            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    const Text(
                      'Nos Coordonnées',
                      style: TextStyle(fontSize: 16, fontWeight: FontWeight.bold),
                    ),
                    Container(
                      margin: const EdgeInsets.only(top: 4),
                      height: 2,
                      width: 130,
                      color: rose,
                    )
                  ],
                ),
                GestureDetector(
                  onTap: () {
                    setState(() {
                      modeEdition = !modeEdition;
                    });
                  },
                  child: Column(
                    children: [
                      Text('Modifier', style: TextStyle(color: rose)),
                      Container(
                        margin: const EdgeInsets.only(top: 4),
                        height: 2,
                        width: 60,
                        color: rose,
                      ),
                    ],
                  ),
                )
              ],
            ),

            const SizedBox(height: 20),

            Container(
              padding: const EdgeInsets.all(12),
              decoration: BoxDecoration(
                color: isDark ? Colors.grey.shade900 : Colors.white,
                borderRadius: BorderRadius.circular(12),
              ),
              child: Column(
                children: [
                  buildTextLine("Nom", nomController),
                  buildTextLine("Adresse", adresseController),
                  buildTextLine("Téléphone", telephoneController),
                  buildTextLine("Email", emailController),

                  if (modeEdition) ...[
                    const SizedBox(height: 16),

                    ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: rose,
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(8),
                          side: BorderSide(color: rose),
                        ),
                      ),
                      onPressed: () {
                        setState(() {
                          modeEdition = false;
                        });
                      },
                      child: Text("Valider les modifications", style: TextStyle(color:Colors.white)),
                    ),
                  ] else ...[
                    const SizedBox(height: 16),
                    if (showContactBox) ...[
                      Align(
                        alignment: Alignment.topLeft,
                        child: IconButton(
                          icon: Icon(Icons.close, color: rose),
                          onPressed: () {
                            setState(() {
                              showContactBox = false;
                            });
                          },
                        ),
                      ),
                      TextField(
                        controller: contactMessageController,
                        maxLength: 500,
                        maxLines: 6,
                        cursorColor: rose,
                        decoration: InputDecoration(
                          hintText: "Écrire un message...",
                          counterText: "${contactMessageController.text.length}/500",
                          enabledBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(12),
                            borderSide: BorderSide(color: rose),
                          ),
                          focusedBorder: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(12),
                            borderSide: BorderSide(color: rose, width: 2),
                          ),
                        ),
                        onChanged: (_) => setState(() {}),
                      ),
                      const SizedBox(height: 12),
                      ElevatedButton(
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Colors.white,
                          side: BorderSide(color: rose),
                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
                        ),
                        onPressed: () {
                          String msg = contactMessageController.text.trim();
                          if (msg.isNotEmpty) {
                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(content: Text("Message envoyé")),
                            );
                            contactMessageController.clear();
                            setState(() {
                              showContactBox = false;
                            });
                          }
                        },
                        child: Text("Envoyer", style: TextStyle(color: rose)),
                        
                      )
                    ] else ...[
                      TextButton.icon(
                        onPressed: () {
                          setState(() {
                            showContactBox = true;
                          });
                        },
                        icon: Icon(Icons.chat_bubble_outline, color: rose),
                        label: Text('Contacter', style: TextStyle(color: rose)),
                        style: TextButton.styleFrom(
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(8),
                            side: BorderSide(color: rose),
                          ),
                          padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 8),
                        ),
                      )
                    ]
                  ]
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}
